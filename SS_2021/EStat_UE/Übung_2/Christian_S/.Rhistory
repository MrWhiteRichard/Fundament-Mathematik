demo()
help.start()
3 +       5   # R ignores spacing, 5+5 equals 5   +     5
2 ^ 3
4 / 7         # Division by "/" (not ":")
4 * 2 + 3
4 * (2 + 3)   # R accounts for brackets
3.3 * 2       # Attention, the decimal marker is a point (not comma)
3 / 0         # that's the way it is ;-)...
Inf - 3
Inf - Inf     # NaN = not a number (undefined value)
5 == 4        # "==" equals, logical values are either "TRUE" or "FALSE"
5 >= 4        # ">=" larger or equals, analogously: ">", "<", "<="
5 != 4        # "!=" not equals
is.numeric(pi)
is.character("hello")
is.character(3^7)
c(1,2,4)
setwd("~/Fundament-Mathematik/SS_2021/EStat_UE/Ãœbung_2/Christian_S")
rbinom(7,10,0.3)# sample of size 7 of the binomial distr. with parameter n = 10
knitr::opts_chunk$set(echo = TRUE)
install.packages("gapminder")
library(gapminder)
gapminder
X <- function(x){(x+1)(7-x)}
exp(1:10)                 # exponential function
X <- function(x){(x+1)(7-x)}
sum(X(0:6))
X <- function(x){(x+1)(7-x)}
X(3)
View(X)
cube <- function(x){x * x * x}
cube(4)
cube(1:10)
Xvar <- function(x){(x+1)(7-x)}
Xvar(3)
X <- function(x){(x+1)*(7-x)}
sum(X(0:6))
f_X <- function(x){(x+1)*(7-x)}
sum(f_X(0:6))
find_c <- function(x){(x+1)*(7-x)}
sum(find_c(0:6))
f_X <- function(x){(x+1)*(7-x)/84}
sum(f_x(0:4))
f_X <- function(x){(x+1)*(7-x)/84}
sum(f_X(0:4))
f_X <- function(x){(x+1)*(7-x)/84}
sum(f_X(4:6))
mean(f_X(0:6))
sd(f_X(0:6))
cumsum(c(0:6)*f_X(0:6))
sd(f_X(0:6))
sum(c(0:6)*f_X(0:6))
sd(f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sum(c(0:6)-mean_x)^2
mean_x = sum(c(0:6)*f_X(0:6))
sum((c(0:6)-mean_x)^2*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sum(((c(0:6)-mean_x)^2)*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sum(((c(0:6)-mean_x)^2)*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sum(((c(0:6)-mean_x)^2)*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sum(((c(0:6)-mean_x)^2)*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sd = sum(((c(0:6)-mean_x)^2)*f_X(0:6))
mean_x = sum(c(0:6)*f_X(0:6))
sd = sqrt(sum(((c(0:6)-mean_x)^2)*f_X(0:6)))
mean_x = sum(c(0:6)*f_X(0:6))
standard_deviation = sqrt(sum(((c(0:6)-mean_x)^2)*f_X(0:6)))
mean_x
standard_deviation
dbinom(7,10,0.8)
1-dbinom(10,10,0.85)-dbinom(9,10,0.85)
sum(dbinom(8:10,10,0.85))
sum(dbinom(0:10,10,0.8)*dbinom(0:10,10,0.85))
dpois(27/22)
dpois(0,27/22)
dpois(1,27/22)
1-sum(dpois(0:1,27/22))
1-sum(dpois(0:2,27/22))
qpois(3,27/22)
help(qpois)
qpois(0.995,27/22)
plot(c(1,2),c(5,0))   # Syntax: plot(vector of x-coordinates, vector of y-coordinates,...),
plot(c(1,2),c(5,0),type="l")	# "types" are for example.
x <- seq(0,2,0.01)
y <- exp(x)
plot(x,y, type="l", main="exp-function", col="red")
x <- seq(-50,50,0.1)
y <- dnorm(x,188,24)
plot(x,y)
x <- seq(-50,50,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
x <- seq(-50,50,0.1)
y <- pnorm(x,188,24)
plot(x,y,type="l")
x <- seq(-50,50,0.1)
y <- pnorm(x,188,24)
plot(x,y,type="l")
z <- seq(-50,50,0.1)
y <- pnorm(z,188,24)
plot(x,y,type="l")
z <- seq(-50,50,0.1)
u <- pnorm(z,188,24)
plot(z,u,type="l")
x <- seq(100,240,0.1)
y <- pnorm(x,188,24)
plot(x,y,type="l")
x <- seq(100,240,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
x <- seq(100,260,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
x <- seq(110,250,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
legend(x="topleft",legend=c(sum(green),30-sum(green)),pch=rep(19,2),col=c("green","red"),title="No. Smilies")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
legend(x="x",title="No. Smilies")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
legend(x="x",legend=title="No. Smilies")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
legend(x="x",title="Normal Distirbution")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l")
legend(x="x",title="Normal Distirbution")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l",main="Density of the normal distribution with $\lambda=4$",xlab="values",ylab="density")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l",main="Density of the normal distribution",xlab="values",ylab="density")
x <- seq(110,266,0.1)
y <- dnorm(x,188,24)
plot(x,y,type="l",main="Density of the normal distribution",xlab="mg/dL",ylab="density")
pnorm(200,188,24)
1 -pnorm(200,188,24)
pnorm(170,188,24)-pnorm(150,188,24)
qnorm(0.75,188,24)-qnorm(0.25,188,24)
qnorm(0.85,188,24)
bell <- rnorm(1000, 188, 24)
hist(bell, xlab = "mg/dL", ylab = "Number of Women", main = "Distribution of Cholesterol Level in Women")
1 - pnorm(200, 188, 24)
pnorm(170, 188, 24) - pnorm(150, 188, 24)
qnorm(0.75, 188, 24) - qnorm(0.25, 188, 24)
qnorm(0.85, 188, 24)
hist(
rnorm(10^6, 188, 24),
main = "Histogram for Drug company",
xlab = "cholesterol level",
ylab = "sample size"
)
hist(rnorm(2000,188,24))
hist(rnorm(2000,188,24))
hist(rnorm(2000,188,24), xlabel = "mg/dL", ylabel="Number of women")
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women")
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(100,300))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(120,270))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(110,270))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(120,270))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(110,270))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(120,270))
hist(rnorm(2000,188,24),main="Histogramm of 2000 samples",xlab = "mg/dL", ylab="Number of women",xlim=c(115,270))
