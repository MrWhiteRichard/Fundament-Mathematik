dhw <- function(x, theta){
theta*x^(theta - 1)
}
phw <- function(x, theta){
x^theta
}
qhw <- function(p, theta){
p^(1/theta)
}
rhw <- function(n, theta){
runif(n, min = 0, max = 1)^(1/theta)
}
theta = 2
estimates = c()
sample_means = c()
samples = c()
sample_sizes = seq(500,10000,500)
for (n in sample_sizes)
{samples = append(samples, rhw(500, theta))
Sn = sum(-1/n*log(samples))
estimates = append(estimates, Sn)
sample_mean = 1/n*sum(estimates)*500
sample_means = append(sample_means, sample_mean)
}
plot(sample_sizes, estimates, col = 1, type = "p", xlab = "Sample size", ylab = "y", ylim = c(0.4,0.8))
points(sample_sizes, sample_means, col = 2)
abline(0.5,0, col = 1)
abline(2/3,0, col = 2)
sd = sqrt(theta^2/sample_sizes)
lines(sample_sizes,  2/3 + sd, col = 3)
lines(sample_sizes,  2/3 - sd, col = 3)
legend("topright", c("Estimates of 1/theta", "Sample means"), col = c(1,2), lty=1, cex=0.8)
theoretical_sigma <- 1 / (sqrt(sample_size) * theta)
dhw <-
function(x, theta)
ifelse(x <= 0 | x >= 1, 0, theta * x ^ (theta - 1))
dhw(-2, 2)
phw <-
function(x, theta)
ifelse(x <= 0, 0, ifelse(x >= 1, 1, x ^ theta))
phw(1 / 2, 3)
qhw <- function(p, theta)
return(p ^ (1 / theta))
qhw(phw(1 / 4, 5), 5)
rhw <- function(n, theta)
return(qhw(runif(n), theta))
rhw(4, 2)
S <- function(x) {
-mean(log(x))
}
x <- c(1, 4, 3)
S(x)
theta <- 2
sample_size <- seq(500, 10000, 500)
theoretical_mu <- 1 / theta
theoretical_sigma500 <- 1 / (sqrt(500) * theta)
plot(
1,
type = "n",
xlim = c(500, 10000),
ylim = c(
theoretical_mu - 2 * theoretical_sigma500,
theoretical_mu + 2 * theoretical_sigma500
),
ylab = "estimation",
xlab = "sample size n",
main = paste("theta =", theta)
)
for (n in sample_size) {
est <- replicate(100, S(rhw(n, theta)))
mu <- mean(est)
sigma <- sd(est)
points(replicate(100, n), est)
arrows(
n,
mu - sigma,
n,
mu + sigma,
length = 0.1,
angle = 90,
code = 3,
col = "red"
)
points(n, mu, col = "red", pch = 19)
}
lines(
c(0, sample_size, 10500),
replicate(length(sample_size) + 2, theoretical_mu),
col = "green",
lwd = 2
)
theoretical_sigma <- 1 / (sqrt(sample_size) * theta)
lines(sample_size,  theoretical_mu + theoretical_sigma, col = "green")
lines(sample_size,  theoretical_mu - theoretical_sigma, col = "green")
legend("topright", c("estimates", "theoretical values"), col = c("red","green"), lty=1, cex=0.8)
dhw <-
function(x, theta)
ifelse(x <= 0 | x >= 1, 0, theta * x ^ (theta - 1))
dhw(-2, 2)
phw <-
function(x, theta)
ifelse(x <= 0, 0, ifelse(x >= 1, 1, x ^ theta))
phw(1 / 2, 3)
qhw <- function(p, theta)
return(p ^ (1 / theta))
qhw(phw(1 / 4, 5), 5)
rhw <- function(n, theta)
return(qhw(runif(n), theta))
rhw(4, 2)
S <- function(x) {
-mean(log(x))
}
x <- c(1, 4, 3)
S(x)
theta <- 2
sample_size <- seq(500, 10000, 500)
theoretical_mu <- 1 / theta
theoretical_sigma500 <- 1 / (sqrt(500) * theta)
plot(
1,
type = "n",
xlim = c(500, 10000),
ylim = c(
theoretical_mu - 2 * theoretical_sigma500,
theoretical_mu + 2 * theoretical_sigma500
),
ylab = "estimation",
xlab = "sample size n",
main = paste("theta =", theta)
)
for (n in sample_size) {
est <- replicate(100, S(rhw(n, theta)))
mu <- mean(est)
sigma <- sd(est)
points(replicate(100, n), est)
arrows(
n,
mu - sigma,
n,
mu + sigma,
length = 0.1,
angle = 90,
code = 3,
col = "red"
)
points(n, mu, col = "red", pch = 19)
}
lines(
c(0, sample_size, 10500),
replicate(length(sample_size) + 2, theoretical_mu),
col = "green",
lwd = 2
)
theoretical_sigma <- 1 / (sqrt(sample_size) * theta)
lines(sample_size,  theoretical_mu + theoretical_sigma, col = "green")
lines(sample_size,  theoretical_mu - theoretical_sigma, col = "green")
legend("topright", c("estimates", "theoretical values"), col = c("red","green"), lty=1, cex=0.8)
dhw <- function(x, theta){
theta*x^(theta - 1)
}
phw <- function(x, theta){
x^theta
}
qhw <- function(p, theta){
p^(1/theta)
}
rhw <- function(n, theta){
runif(n, min = 0, max = 1)^(1/theta)
}
theta = 2
estimates = c()
sample_means = c()
samples = c()
sample_sizes = seq(500,10000,500)
for (n in sample_sizes)
{samples = append(samples, rhw(500, theta))
Sn = sum(-1/n*log(samples))
estimates = append(estimates, Sn)
sample_mean = 1/n*sum(estimates)*500
sample_means = append(sample_means, sample_mean)
}
plot(sample_sizes, estimates, col = 1, type = "p", xlab = "Sample size", ylab = "y", ylim = c(0.4,0.8))
points(sample_sizes, sample_means, col = 2)
abline(0.5,0, col = 1)
abline(2/3,0, col = 2)
sd = sqrt(theta^2/sample_sizes)
lines(sample_sizes,  2/3 + sd, col = 3)
lines(sample_sizes,  2/3 - sd, col = 3)
legend("topright", c("Estimates of 1/theta", "Sample means"), col = c(1,2), lty=1, cex=0.8)
dhw <-
function(x, theta)
ifelse(x <= 0 | x >= 1, 0, theta * x ^ (theta - 1))
dhw(-2, 2)
phw <-
function(x, theta)
ifelse(x <= 0, 0, ifelse(x >= 1, 1, x ^ theta))
phw(1 / 2, 3)
qhw <- function(p, theta)
return(p ^ (1 / theta))
qhw(phw(1 / 4, 5), 5)
rhw <- function(n, theta)
return(qhw(runif(n), theta))
rhw(4, 2)
S <- function(x) {
-mean(log(x))
}
x <- c(1, 4, 3)
S(x)
theta <- 2
sample_size <- seq(500, 10000, 500)
theoretical_mu <- 1 / theta
theoretical_sigma500 <- 1 / (sqrt(500) * theta)
plot(
1,
type = "n",
xlim = c(500, 10000),
ylim = c(
theoretical_mu - 2 * theoretical_sigma500,
theoretical_mu + 2 * theoretical_sigma500
),
ylab = "estimation",
xlab = "sample size n",
main = paste("theta =", theta)
)
for (n in sample_size) {
est <- replicate(100, S(rhw(n, theta)))
mu <- mean(est)
sigma <- sd(est)
points(replicate(100, n), est)
arrows(
n,
mu - sigma,
n,
mu + sigma,
length = 0.1,
angle = 90,
code = 3,
col = "red"
)
points(n, mu, col = "red", pch = 19)
}
lines(
c(0, sample_size, 10500),
replicate(length(sample_size) + 2, theoretical_mu),
col = "green",
lwd = 2
)
theoretical_sigma <- 1 / (sqrt(sample_size) * theta)
lines(sample_size,  theoretical_mu + theoretical_sigma, col = "green")
lines(sample_size,  theoretical_mu - theoretical_sigma, col = "green")
legend(
"topright",
c("estimates", "theoretical values"),
col = c("red", "green"),
lty = 1,
cex = 0.8
)
dhw <- function(x, theta){
if (x <= 0)
{ 0 }
else if (0 < x && x < 1)
{ theta*x^(theta - 1) }
else
{ 0 }
}
phw <- function(x, theta){
if (x <= 0)
{ 0 }
else if (0 < x && x < 1)
{ x^theta }
else
{ 1 }
}
qhw <- function(p, theta){
stopifnot(0 <= p && p <= 1)
p^(1/theta)
}
rhw <- function(n, theta){
runif(n, min = 0, max = 1)^(1/theta)
}
theta = 2
sample_sizes = seq(500,10000,500)
sample_means = c()
sample_sds = c()
plot(
1,
type = "n",
xlim = c(500, 10000),
ylim = c(1/2-2/((theta)*sqrt(500)),1/2+2/((theta)*sqrt(500))),
ylab = "estimation",
xlab = "sample size n",
main = paste("theta =", theta)
)
for (n in sample_sizes)
{
estimates = replicate(100, -mean(log(rhw(n, theta))))
points(replicate(100,n), estimates)
sample_means = append(sample_means, mean(estimates))
sample_sds = append(sample_sds, sd(estimates))
}
mean = 1/theta
sd = sqrt(1/(theta^2*sample_sizes))
lines(sample_sizes, replicate(length(sample_sizes), mean), col = 2, lwd = 2, lty = 2)
lines(sample_sizes,  1/2 + sd, col = 2, lwd = 2)
lines(sample_sizes,  1/2 - sd, col = 2, lwd = 2)
lines(sample_sizes, sample_means, col = 3, lwd = 2, lty = 2)
lines(sample_sizes, 1/2 + sample_sds, col = 3, lwd = 2)
lines(sample_sizes, 1/2 - sample_sds, col = 3, lwd = 2)
legend("topright", c("Theoretical Mean", "Theoretical SD", "Sample Mean", "Sample SD"), col = c(2, 2, 3, 3), lty=c(2,1,2,1), lwd = 2, cex=0.8)
